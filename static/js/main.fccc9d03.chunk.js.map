{"version":3,"sources":["components/List/List.jsx","components/Buttons/Buttons.jsx","App.js","index.js"],"names":["List","React","memo","goods","className","map","name","id","key","propTypes","arrayOf","isRequired","Buttons","props","reverse","reset","sortByLength","sortAlphabetically","type","onClick","preparedGoodsFromServer","good","index","App","state","isListVisible","start","setState","sort","a","b","localeCompare","length","this","hidden","Component","ReactDOM","render","document","getElementById"],"mappings":"uRAIaA,EAAOC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,MAAH,OAC7B,wBAAIC,UAAU,QACXD,EAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACT,wBAAIC,IAAKD,EAAIH,UAAU,cACpBE,UAMTN,EAAKS,UAAY,CACfN,MAAOM,IAAUC,SACjBC,WCbK,IAAMC,EAAU,SAACC,GAAW,IACzBC,EAAqDD,EAArDC,QAASC,EAA4CF,EAA5CE,MAAOC,EAAqCH,EAArCG,aAAcC,EAAuBJ,EAAvBI,mBAEtC,OACE,6BACE,4BACEC,KAAK,SACLC,QAASL,EACTV,UAAU,UAHZ,WAOA,4BACEc,KAAK,SACLC,QAASJ,EACTX,UAAU,UAHZ,SAOA,4BACEc,KAAK,SACLC,QAASF,EACTb,UAAU,UAHZ,uBAOA,4BACEc,KAAK,SACLC,QAASH,EACTZ,UAAU,UAHZ,yBCXAgB,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG8Cf,KAAI,SAACgB,EAAMC,GAAP,MAClD,CACEhB,KAAMe,EACNd,GAAIe,MA2EOC,E,4MAtEbC,MAAQ,CACNC,eAAe,EACftB,MAAOiB,G,EAGTM,MAAQ,WACN,EAAKC,SAAS,CACZF,eAAe,K,EAInBX,QAAU,WACR,EAAKa,UAAS,SAAAH,GAAK,MAAK,CACtBrB,MAAO,YAAIqB,EAAMrB,OAAOW,e,EAI5BC,MAAQ,WACN,EAAKY,SAAS,CACZxB,MAAOiB,K,EAIXH,mBAAqB,WACnB,EAAKU,UAAS,SAAAH,GAAK,MAAK,CACtBrB,MAAO,YAAIqB,EAAMrB,OAAOyB,MAAK,SAACC,EAAGC,GAAJ,OAC3BD,EAAEvB,KAAKyB,cAAcD,EAAExB,c,EAK7BU,aAAe,WACb,EAAKW,UAAS,SAAAH,GAAK,MAAK,CACtBrB,MAAO,YAAIqB,EAAMrB,OAAOyB,MAAK,SAACC,EAAGC,GAAJ,OAC3BD,EAAEvB,KAAK0B,OAASF,EAAExB,KAAK0B,e,uDAKnB,IAAD,EAC0BC,KAAKT,MAA9BC,EADD,EACCA,cAAetB,EADhB,EACgBA,MAEvB,OACE,yBAAKC,UAAU,OACb,6BACE,4BACEA,UAAU,SACVc,KAAK,SACLgB,QAAST,EACTN,QAASc,KAAKP,OAJhB,SAQA,yBACEQ,OAAQT,GAER,kBAAC,EAAD,CACEX,QAASmB,KAAKnB,QACdC,MAAOkB,KAAKlB,MACZE,mBAAoBgB,KAAKhB,mBACzBD,aAAciB,KAAKjB,eAErB,kBAAC,EAAD,CAAMb,MAAOA,W,GA/DPF,IAAMkC,WCrBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fccc9d03.chunk.js","sourcesContent":["import React from 'react';\nimport './List.css';\nimport propTypes from 'prop-types';\n\nexport const List = React.memo(({ goods }) => (\n  <ul className=\"list\">\n    {goods.map(({ name, id }) => (\n      <li key={id} className=\"list__item\">\n        {name}\n      </li>\n    ))}\n  </ul>\n));\n\nList.propTypes = {\n  goods: propTypes.arrayOf,\n}.isRequired;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport const Buttons = (props) => {\n  const { reverse, reset, sortByLength, sortAlphabetically } = props;\n\n  return (\n    <div>\n      <button\n        type=\"button\"\n        onClick={reverse}\n        className=\"button\"\n      >\n        Reverse\n      </button>\n      <button\n        type=\"button\"\n        onClick={reset}\n        className=\"button\"\n      >\n        Reset\n      </button>\n      <button\n        type=\"button\"\n        onClick={sortAlphabetically}\n        className=\"button\"\n      >\n        Sort alphabetically\n      </button>\n      <button\n        type=\"button\"\n        onClick={sortByLength}\n        className=\"button\"\n      >\n        Sort by name length\n      </button>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  reverse: propTypes.func.isRequired,\n  reset: propTypes.func.isRequired,\n  sortByLength: propTypes.func.isRequired,\n  sortAlphabetically: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { List } from './components/List/List';\nimport { Buttons } from './components/Buttons';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoodsFromServer = goodsFromServer.map((good, index) => (\n  {\n    name: good,\n    id: index,\n  }\n));\n\nclass App extends React.Component {\n  state = {\n    isListVisible: true,\n    goods: preparedGoodsFromServer,\n  }\n\n  start = () => {\n    this.setState({\n      isListVisible: false,\n    });\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  reset = () => {\n    this.setState({\n      goods: preparedGoodsFromServer,\n    });\n  }\n\n  sortAlphabetically = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => (\n        a.name.localeCompare(b.name)\n      )),\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((a, b) => (\n        a.name.length - b.name.length\n      )),\n    }));\n  }\n\n  render() {\n    const { isListVisible, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div>\n          <button\n            className=\"button\"\n            type=\"button\"\n            hidden={!isListVisible}\n            onClick={this.start}\n          >\n            Start\n          </button>\n          <div\n            hidden={isListVisible}\n          >\n            <Buttons\n              reverse={this.reverse}\n              reset={this.reset}\n              sortAlphabetically={this.sortAlphabetically}\n              sortByLength={this.sortByLength}\n            />\n            <List goods={goods} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}